# This file was automagically generated by mbed.org. For more information, 
# see http://mbed.org/handbook/Exporting-to-GCC-ARM-Embedded

GCC_BIN = "C:/Program Files (x86)/GNU Tools ARM Embedded/5.3 2016q1/bin/"

PROJECT = BMC_STM32
OBJECTS = ./init.o ./interrupt.o ./motor.o ./main.o
SYS_OBJECTS = ./startup_stm32f30x.o ./system_stm32f30x.o ./retarget.o
_STDPERIPHDRVR_OBJECTS = stm32f30x_adc.o stm32f30x_can.o stm32f30x_comp.o stm32f30x_crc.o stm32f30x_dac.o stm32f30x_dbgmcu.o stm32f30x_dma.o stm32f30x_exti.o stm32f30x_flash.o stm32f30x_gpio.o \
	stm32f30x_hrtim.o stm32f30x_i2c.o stm32f30x_iwdg.o stm32f30x_misc.o stm32f30x_opamp.o stm32f30x_pwr.o stm32f30x_rcc.o stm32f30x_rtc.o stm32f30x_spi.o stm32f30x_syscfg.o stm32f30x_tim.o \
	stm32f30x_usart.o stm32f30x_wwdg.o
STDPERIPHDRVR_OBJECTS = $(addprefix ../../Libraries/STM32F30x_StdPeriph_Driver/src/,$(_STDPERIPHDRVR_OBJECTS))
INCLUDE_PATHS = -I. -I../../Libraries -I../../Libraries/CMSIS/Device/ST/STM32F30x/Include -I../../Libraries/CMSIS/Include -I../../Libraries/STM32F30x_StdPeriph_Driver/inc
LINKER_SCRIPT = ./STM32F303xE.ld

############################################################################### 
AS      = $(GCC_BIN)arm-none-eabi-as
CC      = $(GCC_BIN)arm-none-eabi-gcc
CPP     = $(GCC_BIN)arm-none-eabi-g++
LD      = $(GCC_BIN)arm-none-eabi-gcc
OBJCOPY = $(GCC_BIN)arm-none-eabi-objcopy
OBJDUMP = $(GCC_BIN)arm-none-eabi-objdump
SIZE    = $(GCC_BIN)arm-none-eabi-size 

ifeq ($(HARDFP),1)
	FLOAT_ABI = hard
else
	FLOAT_ABI = softfp
endif


CPU = -mcpu=cortex-m4 -mthumb -mfpu=fpv4-sp-d16 -mfloat-abi=$(FLOAT_ABI)
CC_FLAGS = $(CPU) -c -g -fno-common -fmessage-length=0 -Wall -Wextra -fno-exceptions -ffunction-sections -fdata-sections -fomit-frame-pointer -MMD -MP
CC_SYMBOLS = -DTARGET_FF_ARDUINO -DTOOLCHAIN_GCC_ARM -DTARGET_NUCLEO_F303RE -D__CORTEX_M4 -DTARGET_CORTEX_M -D__FPU_PRESENT=1 -DTARGET_M4 -DTARGET_FF_MORPHO -DTARGET_STM -DTARGET_STM32F3 -DTOOLCHAIN_GCC -DTARGET_STM32F303RE -DARM_MATH_CM4 

LD_FLAGS = $(CPU) -Wl,--gc-sections -u _printf_float -u _scanf_float -Wl,-Map=$(PROJECT).map,--cref
#LD_FLAGS = $(CPU) -Wl,--gc-sections -u _printf_float -u _scanf_float -Wl,--wrap,main -Wl,-Map=$(PROJECT).map,--cref
LD_SYS_LIBS = -lstdc++ -lsupc++ -lm -lc -lgcc -lnosys


ifeq ($(DEBUG), 1)
  CC_FLAGS += -DDEBUG -O0
else
  CC_FLAGS += -DNDEBUG -Os
endif

.PHONY: all clean lst size

all: $(PROJECT).bin $(PROJECT).hex size


clean:
	rm -f $(PROJECT).bin $(PROJECT).elf $(PROJECT).hex $(PROJECT).map $(PROJECT).lst $(OBJECTS) $(DEPS)
# rm -f $(PROJECT).bin $(PROJECT).elf $(PROJECT).hex $(PROJECT).map $(PROJECT).lst $(OBJECTS) $(STDPERIPHDRVR_OBJECTS) $(DEPS)


.asm.o:
	$(CC) $(CPU) -c -x assembler-with-cpp -o $@ $<
.s.o:
	$(CC) $(CPU) -c -x assembler-with-cpp -o $@ $<
.S.o:
	$(CC) $(CPU) -c -x assembler-with-cpp -o $@ $<

.c.o:
	$(CC)  $(CC_FLAGS) $(CC_SYMBOLS) -std=gnu99   $(INCLUDE_PATHS) -o $@ $<

.cpp.o:
	$(CPP) $(CC_FLAGS) $(CC_SYMBOLS) -std=gnu++11 -fno-rtti $(INCLUDE_PATHS) -o $@ $<



$(PROJECT).elf: $(OBJECTS) $(SYS_OBJECTS) $(STDPERIPHDRVR_OBJECTS)
	$(LD) $(LD_FLAGS) -T$(LINKER_SCRIPT) $(LIBRARY_PATHS) -o $@ $^ $(LIBRARIES) $(LD_SYS_LIBS) $(LIBRARIES) $(LD_SYS_LIBS)


$(PROJECT).bin: $(PROJECT).elf
	$(OBJCOPY) -O binary $< $@

$(PROJECT).hex: $(PROJECT).elf
	@$(OBJCOPY) -O ihex $< $@

$(PROJECT).lst: $(PROJECT).elf
	@$(OBJDUMP) -Sdh $< > $@

lst: $(PROJECT).lst

size: $(PROJECT).elf
	$(SIZE) $(PROJECT).elf

DEPS = $(OBJECTS:.o=.d) $(SYS_OBJECTS:.o=.d) $(STDPERIPHDRVR_OBJECTS:.o=.d)
-include $(DEPS)


